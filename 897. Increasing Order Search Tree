/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        if(!root) return nullptr;
        vector<TreeNode*>s;
        inorder(root,s);
        for(int i=0;i<s.size();i++){
            s[i]->left=nullptr;
            if(i+1<s.size()){
                s[i]->right=s[i+1];
            }
            else{
            s[i]->right=nullptr;}
        }
    return s[0];
    }
    void inorder(TreeNode* node,vector<TreeNode*>&s){
        if(!node)return; 
        inorder(node->left,s);
        s.push_back(node);
        inorder(node->right,s);
    }
};
