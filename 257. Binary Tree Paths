/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string>paths;
        if(!root) return paths;
        dfs(root,paths,"");
        return paths;
    }
void dfs(TreeNode* node,vector<string>&paths,string path){
    if(!node) 
    return ;
    if(!path.empty())
     path+="->";
    path+=to_string(node->val);
    if(!node->left && !node->right){
    paths.push_back(path);}
    else{
        dfs(node->left,paths,path);
        dfs(node->right,paths,path);
}}
};
