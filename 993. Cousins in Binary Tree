/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int xparent,yparent,xdepth,ydepth;

void dfs(TreeNode* node,int parent,int depth,int x,int y){
    if(!node) return;

    if(node->val==x){
        xparent=parent;
        xdepth=depth;
    }
    else if(node->val==y){
        yparent=parent;
        ydepth=depth;
    }

    dfs(node->left,node->val,depth+1,x,y);
    dfs(node->right,node->val,depth+1,x,y);
}
    bool isCousins(TreeNode* root, int x, int y) {
        dfs(root,-1,0,x,y);
        return(xdepth==ydepth && xparent!=yparent);
    }
};
