/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
ListNode* reverse(ListNode*head){
    ListNode* prev=NULL;
        ListNode* curr=head;
        while(curr!=NULL){
        ListNode* next=curr->next;
        curr->next=prev;
        prev=curr;
        curr=next;}
        return prev;

}
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result=NULL;
        int carry=0;
        l1=reverse(l1);
        l2=reverse(l2);
        while(l1!=NULL||l2!=NULL||carry!=0){
            int sum=carry;
            if(l1!=NULL){
                sum+=l1->val;
                l1=l1->next;
            }
            if(l2!=NULL){
                sum+=l2->val;
                l2=l2->next;
            }
            int new_d=sum%10;
            carry=sum/10;
            ListNode* node=new ListNode(new_d);
            node->next=result;
            result=node;
        }
        return result;
    }
};
